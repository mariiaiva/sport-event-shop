{% paginate collection.products by 6 %}
<section class="collection-sec">
  <div class="sort-container">
    <select id="sort-by">
      {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}

      {% for option in collection.sort_options %}
      <option value="{{ option.value }}" {% if option.value==sort_by %} selected="selected" {% endif %}>
        {{ option.name }}
      </option>
      {% endfor %}
    </select>
  </div>
  <div>
    <h1 class="collection-title">Collections</h1>
    <p class="collection-description">{{ collection.title }}</p>
    <div class="products-grid">
      {% for product in collection.products %}
      <div class="product-card">
        <img width="350" height="350" loading="lazy" src="{{ product.featured_image | image_url}}"
          alt="{{ product.title }}">
        <h3><a href="{{ product.url }}">{{ product.title }}</a></h3>
      </div>
      {% endfor %}
    </div>
    <div class="pagination">
      {{ paginate | default_pagination }}
    </div>
  </div>
</section>

{% endpaginate %}

<style>
  .collection-sec {
    background: {
        {
        section.settings.background
      }
    }

    ;

    color: {
        {
        section.settings.text_color
      }
    }

    ;
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .sort-container {
    width: 100%;
    display: flex;
    justify-content: flex-start;
    margin-bottom: 20px;
    margin-left: 90px;
  }

  .sort-container select {
    padding: 8px;
    margin-left: 10px;
    font-size: 14px;
    border: 1px solid #ddd;
    border-radius: 5px;
  }

  .collection-title {
    font-size: 32px;
    font-weight: bold;
    text-align: center;
    margin-bottom: 10px;
  }

  .collection-description {
    text-align: center;
    margin-bottom: 20px;
    font-size: 18px;
    color: #555;
  }

  .products-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 30px;
    margin-top: 20px;
    width: 100%;
    max-width: 1200px;
  }

  .product-card {
    background-color: #fff;
    border-radius: 8px;
    border: 1px solid #ddd;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    padding: 20px;
    text-align: center;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .product-card img {
    width: 100%;
    height: 300px;
    object-fit: cover;
    border-radius: 5px;
    transition: transform 0.3s ease;
  }

  .product-card h3 {
    font-size: 18px;
    font-weight: bold;
    margin-top: 10px;
  }

  .product-card h3 a {
    text-decoration: none;
    color: #333;
    transition: color 0.3s ease;
  }

  .product-card a:hover {
    color: #0073e6;
  }

  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
  }

  .product-card:hover img {
    transform: scale(1.05);
  }

  .pagination {
    display: flex;
    justify-content: center;
    margin-top: 30px;
  }

  .pagination a {
    text-decoration: none;
    padding: 8px 15px;
    margin: 0 5px;
    background-color: #f0f0f0;
    border-radius: 5px;
    color: #333;
  }

  .pagination a:hover {
    background-color: #0073e6;
    color: #fff;
  }

  @media (max-width: 768px) {
    .products-grid {
      grid-template-columns: repeat(2, 1fr);
    }

    .sort-container {
      justify-content: center;
    }
  }

  @media (max-width: 480px) {
    .products-grid {
      grid-template-columns: 1fr;
    }

    .collection-title {
      font-size: 24px;
    }

    .collection-description {
      font-size: 16px;
    }
  }
</style>

<script>
  Shopify.queryParams = {};

  if (location.search.length) {
    var params = location.search.substr(1).split('&');

    for (var i = 0; i < params.length; i++) {
      var keyValue = params[i].split('=');

      if (keyValue.length) {
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }

  document.querySelector('#sort-by').addEventListener('change', function (e) {
    var value = e.target.value;

    Shopify.queryParams.sort_by = value;
    location.search = new URLSearchParams(Shopify.queryParams).toString();
  });
</script>

{% schema %}
{
"name": "collection",
"settings": [
{
"type": "color",
"id": "background",
"label": "Background",
"default": "#F4F4F4"
},
{
"type": "color",
"id": "text_color",
"label": "Text",
"default": "#000000"
}
],
"presets": [
{
"name": "collection"
}
]
}
{% endschema %}